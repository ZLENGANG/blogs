import{_ as n,o as s,c as a,e as t}from"./app-3e796566.js";const p={},e=t(`<h2 id="ora" tabindex="-1"><a class="header-anchor" href="#ora" aria-hidden="true">#</a> ora</h2><h3 id="知识点1-class私有属性" tabindex="-1"><a class="header-anchor" href="#知识点1-class私有属性" aria-hidden="true">#</a> 知识点1：Class私有属性</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">{</span>
  #name <span class="token operator">=</span> <span class="token string">&#39;sam&#39;</span><span class="token punctuation">;</span>

  <span class="token function">#getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#name<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span><span class="token function">#getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>#name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="知识点2-输入流缓冲" tabindex="-1"><a class="header-anchor" href="#知识点2-输入流缓冲" aria-hidden="true">#</a> 知识点2：输入流缓冲</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> readline <span class="token keyword">from</span> <span class="token string">&#39;node:readline&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BufferListStream <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;bl&#39;</span><span class="token punctuation">;</span>

#mutedStream <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferListStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">this</span><span class="token punctuation">.</span>#mutedStream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">this</span><span class="token punctuation">.</span>#rl <span class="token operator">=</span> readline<span class="token punctuation">.</span><span class="token function">createInterface</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">input</span><span class="token operator">:</span> process<span class="token punctuation">.</span>stdin<span class="token punctuation">,</span>
  <span class="token literal-property property">output</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#mutedStream<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="知识点3-命令行光标隐藏和显示" tabindex="-1"><a class="header-anchor" href="#知识点3-命令行光标隐藏和显示" aria-hidden="true">#</a> 知识点3：命令行光标隐藏和显示</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\\u001B[?25l&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 光标隐藏</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\\u001B[?25h&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 光标显示</span>

<span class="token keyword">import</span> cliCursor <span class="token keyword">from</span> <span class="token string">&#39;cli-cursor&#39;</span><span class="token punctuation">;</span>
cliCursor<span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
cliCursor<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span>stream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="知识点4-命令行清屏操作" tabindex="-1"><a class="header-anchor" href="#知识点4-命令行清屏操作" aria-hidden="true">#</a> 知识点4：命令行清屏操作</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">this</span><span class="token punctuation">.</span>#stream<span class="token punctuation">.</span><span class="token function">cursorTo</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 光标移动到初始位置</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span>#linesToClear<span class="token punctuation">;</span> index<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>#stream<span class="token punctuation">.</span><span class="token function">moveCursor</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 如果清除行数大于1，光标上移一行</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span>#stream<span class="token punctuation">.</span><span class="token function">clearLine</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 清除一行</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="知识点5-打印成功字符" tabindex="-1"><a class="header-anchor" href="#知识点5-打印成功字符" aria-hidden="true">#</a> 知识点5：打印成功字符</h3><p>使用log-symbols获取成功字符</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> logSymbols <span class="token keyword">from</span> <span class="token string">&#39;log-symbols&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>logSymbols<span class="token punctuation">.</span>success<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ✔</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","ora.html.vue"]]);export{r as default};
